// automatically generated by the FlatBuffers compiler, do not modify

package uci.edu.cs230.toy_cdn.registry.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RegistrationReq extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static RegistrationReq getRootAsRegistrationReq(ByteBuffer _bb) { return getRootAsRegistrationReq(_bb, new RegistrationReq()); }
  public static RegistrationReq getRootAsRegistrationReq(ByteBuffer _bb, RegistrationReq obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RegistrationReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uci.edu.cs230.toy_cdn.registry.fbs.GeoLocation location() { return location(new uci.edu.cs230.toy_cdn.registry.fbs.GeoLocation()); }
  public uci.edu.cs230.toy_cdn.registry.fbs.GeoLocation location(uci.edu.cs230.toy_cdn.registry.fbs.GeoLocation obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public uci.edu.cs230.toy_cdn.registry.fbs.EndPoint address() { return address(new uci.edu.cs230.toy_cdn.registry.fbs.EndPoint()); }
  public uci.edu.cs230.toy_cdn.registry.fbs.EndPoint address(uci.edu.cs230.toy_cdn.registry.fbs.EndPoint obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static void startRegistrationReq(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addLocation(FlatBufferBuilder builder, int locationOffset) { builder.addStruct(0, locationOffset, 0); }
  public static void addAddress(FlatBufferBuilder builder, int addressOffset) { builder.addOffset(1, addressOffset, 0); }
  public static int endRegistrationReq(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RegistrationReq get(int j) { return get(new RegistrationReq(), j); }
    public RegistrationReq get(RegistrationReq obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

